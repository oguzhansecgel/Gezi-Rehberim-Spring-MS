version: '3.8'

services:
  comment-service:
    container_name: comment-service-prod
    build:
      context: ./comment-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    restart: on-failure
    depends_on:
      - comment-db
      - discovery-server
      - config-server
    networks:
      - common
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
      - SPRING_DATA_MONGODB_URI=mongodb://comment-db:27017/commentservicedb

  favorite-place-service:
    container_name: favorite-place-service-prod
    build:
      context: ./favorite-place-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    restart: on-failure
    depends_on:
      - favorite-place-db
      - discovery-server
      - config-server
    networks:
      - common
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
      - SPRING_DATA_MONGODB_URI=mongodb://favorite-place-db:27017/favoriteplacedb


  place-service:
    container_name: place-service-prod
    build:
      context: ./place-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - ./uploads:/place-service/uploads
    restart: on-failure
    depends_on:
      - place-db
      - discovery-server
      - config-server
    networks:
      - common
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
      - SPRING_DATASOURCE_URL=jdbc:postgresql://place-db:5432/place-service
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=test

  user-service:
    container_name: user-service-prod
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    restart: on-failure
    depends_on:
      - user-db
      - discovery-server
      - config-server
    networks:
      - common
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-db:5432/user-service
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=test

  search-service:
    container_name: search-service
    build:
      context: ./search-service
      dockerfile: Dockerfile
    restart: on-failure
    environment:
      - SPRING_DATA_ELASTICSEARCH_REST_URIS=http://elasticsearch:9200
      - SPRING_CLOUD_CONFIG_PROFILE=prod
      - CONFIGURL=http://config-server:8079
    ports:
      - "8085:8085"
    networks:
      - common
    depends_on:
      - elasticsearch
      - config-server

  config-server:
    build:
      context: ./config-server
      dockerfile: Dockerfile
    ports:
      - "8079:8079"
    environment:
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/oguzhansecgel/gezi-rehberim-config-server
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_CLOUD_CONFIG_SERVER_GIT_CLONE_ON_START=true
    networks:
      - common
  discovery-server:
    build:
      context: ./discovery-server
    ports:
      - "8888:8888"
    restart: on-failure
    environment:
      - SPRING_CLOUD_CONFIG_PROFILE=local
      - CONFIGURL=http://config-server:8079
    networks:
      - common

  comment-db:
    image: mongo:latest
    container_name: comment-db-prod
    ports:
      - "27030:27017"
    volumes:
      - comment-data-prod:/data/db
    networks:
      - common


  favorite-place-db:
    image: mongo:latest
    container_name: favorite-place-db-prod
    ports:
      - "27031:27017"
    volumes:
      - favorite-place-data-prod:/data/db
    networks:
      - common

  place-db:
    image: postgres
    container_name: place-db-prod
    environment:
      POSTGRES_DB: place-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
    ports:
      - "5433:5432"
    volumes:
      - place_data_prod:/var/lib/postgresql/data
    networks:
      - common

  user-db:
    image: postgres
    container_name: user-db-prod
    environment:
      POSTGRES_DB: user-service
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
    ports:
      - "5434:5432"
    volumes:
      - user_data_prod:/var/lib/postgresql/data
    networks:
      - common



  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.3
    container_name: gezi-rehber-elasticsearch
    environment:
      - node.name=elasticsearch
      - cluster.name=elasticsearch-cluster
      - discovery.seed_hosts=elasticsearch
      - cluster.initial_master_nodes=elasticsearch
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - common
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1


  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.3
    container_name: gezi-rehber-kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - common

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: gezi-rehber-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - common

  kafka:
    image: wurstmeister/kafka:latest
    container_name: gezi-rehber-kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENER_NAMES: INSIDE,OUTSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_MAX_MESSAGE_SIZE: 104857600
    networks:
      - common

  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - common
networks:
  common:
    driver: bridge


volumes:
  elasticsearch-data:
    driver: local
  comment-data-prod:
    driver: local
  favorite-place-data-prod:
    driver: local
  place_data_prod:
    driver: local
  user_data_prod:
    driver: local


